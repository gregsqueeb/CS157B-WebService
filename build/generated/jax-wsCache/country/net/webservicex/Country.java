
package net.webservicex;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "country", targetNamespace = "http://www.webserviceX.NET", wsdlLocation = "http://www.webservicex.net/country.asmx?WSDL")
public class Country
    extends Service
{

    private final static URL COUNTRY_WSDL_LOCATION;
    private final static WebServiceException COUNTRY_EXCEPTION;
    private final static QName COUNTRY_QNAME = new QName("http://www.webserviceX.NET", "country");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://www.webservicex.net/country.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        COUNTRY_WSDL_LOCATION = url;
        COUNTRY_EXCEPTION = e;
    }

    public Country() {
        super(__getWsdlLocation(), COUNTRY_QNAME);
    }

    public Country(WebServiceFeature... features) {
        super(__getWsdlLocation(), COUNTRY_QNAME, features);
    }

    public Country(URL wsdlLocation) {
        super(wsdlLocation, COUNTRY_QNAME);
    }

    public Country(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, COUNTRY_QNAME, features);
    }

    public Country(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Country(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CountrySoap
     */
    @WebEndpoint(name = "countrySoap")
    public CountrySoap getCountrySoap() {
        return super.getPort(new QName("http://www.webserviceX.NET", "countrySoap"), CountrySoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CountrySoap
     */
    @WebEndpoint(name = "countrySoap")
    public CountrySoap getCountrySoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "countrySoap"), CountrySoap.class, features);
    }

    /**
     * 
     * @return
     *     returns CountrySoap
     */
    @WebEndpoint(name = "countrySoap12")
    public CountrySoap getCountrySoap12() {
        return super.getPort(new QName("http://www.webserviceX.NET", "countrySoap12"), CountrySoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CountrySoap
     */
    @WebEndpoint(name = "countrySoap12")
    public CountrySoap getCountrySoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "countrySoap12"), CountrySoap.class, features);
    }

    /**
     * 
     * @return
     *     returns CountryHttpGet
     */
    @WebEndpoint(name = "countryHttpGet")
    public CountryHttpGet getCountryHttpGet() {
        return super.getPort(new QName("http://www.webserviceX.NET", "countryHttpGet"), CountryHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CountryHttpGet
     */
    @WebEndpoint(name = "countryHttpGet")
    public CountryHttpGet getCountryHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "countryHttpGet"), CountryHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns CountryHttpPost
     */
    @WebEndpoint(name = "countryHttpPost")
    public CountryHttpPost getCountryHttpPost() {
        return super.getPort(new QName("http://www.webserviceX.NET", "countryHttpPost"), CountryHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CountryHttpPost
     */
    @WebEndpoint(name = "countryHttpPost")
    public CountryHttpPost getCountryHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://www.webserviceX.NET", "countryHttpPost"), CountryHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (COUNTRY_EXCEPTION!= null) {
            throw COUNTRY_EXCEPTION;
        }
        return COUNTRY_WSDL_LOCATION;
    }

}
